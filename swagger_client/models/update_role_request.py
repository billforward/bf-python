# coding: utf-8

"""
    BillForward REST API


    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from pprint import pformat
from six import iteritems
import re


class UpdateRoleRequest(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, created=None, organization_id=None, id=None, name=None, description=None, default_role=False):
        """
        UpdateRoleRequest - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'created': 'datetime',
            'organization_id': 'str',
            'id': 'str',
            'name': 'str',
            'description': 'str',
            'default_role': 'bool'
        }

        self.attribute_map = {
            'created': 'created',
            'organization_id': 'organizationID',
            'id': 'id',
            'name': 'name',
            'description': 'description',
            'default_role': 'defaultRole'
        }

        self._created = created
        self._organization_id = organization_id
        self._id = id
        self._name = name
        self._description = description
        self._default_role = default_role

    @property
    def created(self):
        """
        Gets the created of this UpdateRoleRequest.
        { \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }

        :return: The created of this UpdateRoleRequest.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """
        Sets the created of this UpdateRoleRequest.
        { \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }

        :param created: The created of this UpdateRoleRequest.
        :type: datetime
        """

        self._created = created

    @property
    def organization_id(self):
        """
        Gets the organization_id of this UpdateRoleRequest.
        { \"description\" : \"\", \"verbs\":[\"\"] }

        :return: The organization_id of this UpdateRoleRequest.
        :rtype: str
        """
        return self._organization_id

    @organization_id.setter
    def organization_id(self, organization_id):
        """
        Sets the organization_id of this UpdateRoleRequest.
        { \"description\" : \"\", \"verbs\":[\"\"] }

        :param organization_id: The organization_id of this UpdateRoleRequest.
        :type: str
        """

        self._organization_id = organization_id

    @property
    def id(self):
        """
        Gets the id of this UpdateRoleRequest.
        { \"description\" : \"\", \"verbs\":[\"GET\", \"PUT\"] }

        :return: The id of this UpdateRoleRequest.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this UpdateRoleRequest.
        { \"description\" : \"\", \"verbs\":[\"GET\", \"PUT\"] }

        :param id: The id of this UpdateRoleRequest.
        :type: str
        """

        self._id = id

    @property
    def name(self):
        """
        Gets the name of this UpdateRoleRequest.
        { \"description\" : \"Friendly name of the role.\", \"verbs\":[\"GET\",\"POST\",\"PUT\"] }

        :return: The name of this UpdateRoleRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this UpdateRoleRequest.
        { \"description\" : \"Friendly name of the role.\", \"verbs\":[\"GET\",\"POST\",\"PUT\"] }

        :param name: The name of this UpdateRoleRequest.
        :type: str
        """

        self._name = name

    @property
    def description(self):
        """
        Gets the description of this UpdateRoleRequest.
        { \"description\" : \"Friendly description of the role.\", \"verbs\":[\"GET\",\"POST\",\"PUT\"] }

        :return: The description of this UpdateRoleRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """
        Sets the description of this UpdateRoleRequest.
        { \"description\" : \"Friendly description of the role.\", \"verbs\":[\"GET\",\"POST\",\"PUT\"] }

        :param description: The description of this UpdateRoleRequest.
        :type: str
        """

        self._description = description

    @property
    def default_role(self):
        """
        Gets the default_role of this UpdateRoleRequest.
        { \"description\" : \"If set this role will become the default role for the organization unsetting any existing role. Any accounts without an explicitly set role will have this applied.\", \"verbs\":[\"GET\",\"POST\",\"PUT\"] }

        :return: The default_role of this UpdateRoleRequest.
        :rtype: bool
        """
        return self._default_role

    @default_role.setter
    def default_role(self, default_role):
        """
        Sets the default_role of this UpdateRoleRequest.
        { \"description\" : \"If set this role will become the default role for the organization unsetting any existing role. Any accounts without an explicitly set role will have this applied.\", \"verbs\":[\"GET\",\"POST\",\"PUT\"] }

        :param default_role: The default_role of this UpdateRoleRequest.
        :type: bool
        """

        self._default_role = default_role

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
