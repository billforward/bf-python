# coding: utf-8

"""
    BillForward REST API


    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from pprint import pformat
from six import iteritems
import re


class BraintreeCaptureRequest(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, created=None, organization_id=None, account_id=None, default_payment_method=False, cardholder_name=None, card_number=None, expiry_month=None, expiry_year=None, cvv=None, device_data=None, merchant_account_id=None, ip_address=None, ip_address_country=None):
        """
        BraintreeCaptureRequest - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'created': 'datetime',
            'organization_id': 'str',
            'account_id': 'str',
            'default_payment_method': 'bool',
            'cardholder_name': 'str',
            'card_number': 'str',
            'expiry_month': 'str',
            'expiry_year': 'str',
            'cvv': 'str',
            'device_data': 'str',
            'merchant_account_id': 'str',
            'ip_address': 'str',
            'ip_address_country': 'str'
        }

        self.attribute_map = {
            'created': 'created',
            'organization_id': 'organizationID',
            'account_id': 'accountID',
            'default_payment_method': 'defaultPaymentMethod',
            'cardholder_name': 'cardholderName',
            'card_number': 'cardNumber',
            'expiry_month': 'expiryMonth',
            'expiry_year': 'expiryYear',
            'cvv': 'cvv',
            'device_data': 'deviceData',
            'merchant_account_id': 'merchantAccountId',
            'ip_address': 'ipAddress',
            'ip_address_country': 'ipAddressCountry'
        }

        self._created = created
        self._organization_id = organization_id
        self._account_id = account_id
        self._default_payment_method = default_payment_method
        self._cardholder_name = cardholder_name
        self._card_number = card_number
        self._expiry_month = expiry_month
        self._expiry_year = expiry_year
        self._cvv = cvv
        self._device_data = device_data
        self._merchant_account_id = merchant_account_id
        self._ip_address = ip_address
        self._ip_address_country = ip_address_country

    @property
    def created(self):
        """
        Gets the created of this BraintreeCaptureRequest.
        { \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }

        :return: The created of this BraintreeCaptureRequest.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """
        Sets the created of this BraintreeCaptureRequest.
        { \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }

        :param created: The created of this BraintreeCaptureRequest.
        :type: datetime
        """

        self._created = created

    @property
    def organization_id(self):
        """
        Gets the organization_id of this BraintreeCaptureRequest.
        {\"description\":\"ID of the BillForward Organization within which the requested PaymentMethod should be created. If omitted, this will be auto-populated using your authentication credentials.\",\"verbs\":[\"POST\"]}

        :return: The organization_id of this BraintreeCaptureRequest.
        :rtype: str
        """
        return self._organization_id

    @organization_id.setter
    def organization_id(self, organization_id):
        """
        Sets the organization_id of this BraintreeCaptureRequest.
        {\"description\":\"ID of the BillForward Organization within which the requested PaymentMethod should be created. If omitted, this will be auto-populated using your authentication credentials.\",\"verbs\":[\"POST\"]}

        :param organization_id: The organization_id of this BraintreeCaptureRequest.
        :type: str
        """

        self._organization_id = organization_id

    @property
    def account_id(self):
        """
        Gets the account_id of this BraintreeCaptureRequest.
        {\"description\":\"ID of the BillForward Account with which you would like to associate the created payment method.<br>If omitted, BillForward will associate the created PaymentMethod with a newly-created Account, whose Profile details will be populated using billing information from the funding instrument.\",\"verbs\":[\"POST\"]}

        :return: The account_id of this BraintreeCaptureRequest.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """
        Sets the account_id of this BraintreeCaptureRequest.
        {\"description\":\"ID of the BillForward Account with which you would like to associate the created payment method.<br>If omitted, BillForward will associate the created PaymentMethod with a newly-created Account, whose Profile details will be populated using billing information from the funding instrument.\",\"verbs\":[\"POST\"]}

        :param account_id: The account_id of this BraintreeCaptureRequest.
        :type: str
        """

        self._account_id = account_id

    @property
    def default_payment_method(self):
        """
        Gets the default_payment_method of this BraintreeCaptureRequest.
        {\"default\":false,\"description\":\"Whether the PaymentMethod produced by this request should be elected as the 'default' payment method for the concerned BillForward Account. Whichever PaymentMethod is elected as an Account's default payment method, will be consulted whenever payment is demanded of that Account (i.e. upon the execution of any of the Account's invoices).\",\"verbs\":[\"POST\"]}

        :return: The default_payment_method of this BraintreeCaptureRequest.
        :rtype: bool
        """
        return self._default_payment_method

    @default_payment_method.setter
    def default_payment_method(self, default_payment_method):
        """
        Sets the default_payment_method of this BraintreeCaptureRequest.
        {\"default\":false,\"description\":\"Whether the PaymentMethod produced by this request should be elected as the 'default' payment method for the concerned BillForward Account. Whichever PaymentMethod is elected as an Account's default payment method, will be consulted whenever payment is demanded of that Account (i.e. upon the execution of any of the Account's invoices).\",\"verbs\":[\"POST\"]}

        :param default_payment_method: The default_payment_method of this BraintreeCaptureRequest.
        :type: bool
        """

        self._default_payment_method = default_payment_method

    @property
    def cardholder_name(self):
        """
        Gets the cardholder_name of this BraintreeCaptureRequest.
        {\"description\":\"Name of the person who holds the credit card being captured.\",\"verbs\":[\"POST\"]}

        :return: The cardholder_name of this BraintreeCaptureRequest.
        :rtype: str
        """
        return self._cardholder_name

    @cardholder_name.setter
    def cardholder_name(self, cardholder_name):
        """
        Sets the cardholder_name of this BraintreeCaptureRequest.
        {\"description\":\"Name of the person who holds the credit card being captured.\",\"verbs\":[\"POST\"]}

        :param cardholder_name: The cardholder_name of this BraintreeCaptureRequest.
        :type: str
        """

        self._cardholder_name = cardholder_name

    @property
    def card_number(self):
        """
        Gets the card_number of this BraintreeCaptureRequest.
        {\"description\":\"Number of the credit card being captured.\",\"verbs\":[\"POST\"]}

        :return: The card_number of this BraintreeCaptureRequest.
        :rtype: str
        """
        return self._card_number

    @card_number.setter
    def card_number(self, card_number):
        """
        Sets the card_number of this BraintreeCaptureRequest.
        {\"description\":\"Number of the credit card being captured.\",\"verbs\":[\"POST\"]}

        :param card_number: The card_number of this BraintreeCaptureRequest.
        :type: str
        """

        self._card_number = card_number

    @property
    def expiry_month(self):
        """
        Gets the expiry_month of this BraintreeCaptureRequest.
        {\"description\":\"Expiration month of the credit card being captured, formatted MM.\",\"verbs\":[\"POST\"]}

        :return: The expiry_month of this BraintreeCaptureRequest.
        :rtype: str
        """
        return self._expiry_month

    @expiry_month.setter
    def expiry_month(self, expiry_month):
        """
        Sets the expiry_month of this BraintreeCaptureRequest.
        {\"description\":\"Expiration month of the credit card being captured, formatted MM.\",\"verbs\":[\"POST\"]}

        :param expiry_month: The expiry_month of this BraintreeCaptureRequest.
        :type: str
        """

        self._expiry_month = expiry_month

    @property
    def expiry_year(self):
        """
        Gets the expiry_year of this BraintreeCaptureRequest.
        {\"description\":\"Expiration year of the credit card being captured, formatted YYYY or YY.\",\"verbs\":[\"POST\"]}

        :return: The expiry_year of this BraintreeCaptureRequest.
        :rtype: str
        """
        return self._expiry_year

    @expiry_year.setter
    def expiry_year(self, expiry_year):
        """
        Sets the expiry_year of this BraintreeCaptureRequest.
        {\"description\":\"Expiration year of the credit card being captured, formatted YYYY or YY.\",\"verbs\":[\"POST\"]}

        :param expiry_year: The expiry_year of this BraintreeCaptureRequest.
        :type: str
        """

        self._expiry_year = expiry_year

    @property
    def cvv(self):
        """
        Gets the cvv of this BraintreeCaptureRequest.
        {\"description\":\"3 or 4 digit card verification value assigned to the credit card being captured.\",\"verbs\":[\"POST\"]}

        :return: The cvv of this BraintreeCaptureRequest.
        :rtype: str
        """
        return self._cvv

    @cvv.setter
    def cvv(self, cvv):
        """
        Sets the cvv of this BraintreeCaptureRequest.
        {\"description\":\"3 or 4 digit card verification value assigned to the credit card being captured.\",\"verbs\":[\"POST\"]}

        :param cvv: The cvv of this BraintreeCaptureRequest.
        :type: str
        """

        self._cvv = cvv

    @property
    def device_data(self):
        """
        Gets the device_data of this BraintreeCaptureRequest.
        {\"description\":\"(Required when vaulting a PayPal payment method; otherwise optional)<br>A JSON string providing information about the device your customer used to fill out the card capture form. This information is inserted into your form by <a href=\\\"https://developers.braintreepayments.com/javascript+node/guides/advanced-fraud-tools/client-side\\\">braintree-data.js</a> &mdash; if and only if you use Braintree's drop-in form integrations. You should ideally provide it if you have one (it aids with fraud detection), but it is only mandatory in the case of PayPal payment method vaulting.\",\"verbs\":[\"POST\"]}

        :return: The device_data of this BraintreeCaptureRequest.
        :rtype: str
        """
        return self._device_data

    @device_data.setter
    def device_data(self, device_data):
        """
        Sets the device_data of this BraintreeCaptureRequest.
        {\"description\":\"(Required when vaulting a PayPal payment method; otherwise optional)<br>A JSON string providing information about the device your customer used to fill out the card capture form. This information is inserted into your form by <a href=\\\"https://developers.braintreepayments.com/javascript+node/guides/advanced-fraud-tools/client-side\\\">braintree-data.js</a> &mdash; if and only if you use Braintree's drop-in form integrations. You should ideally provide it if you have one (it aids with fraud detection), but it is only mandatory in the case of PayPal payment method vaulting.\",\"verbs\":[\"POST\"]}

        :param device_data: The device_data of this BraintreeCaptureRequest.
        :type: str
        """

        self._device_data = device_data

    @property
    def merchant_account_id(self):
        """
        Gets the merchant_account_id of this BraintreeCaptureRequest.
        {\"description\":\"Braintree <a href=\\\"https://articles.braintreepayments.com/control-panel/important-gateway-credentials\\\">Merchant account ID</a> with which you wish for the captured funding instrument to transact. Within your Braintree gateway, you can have multiple merchant accounts to process transactions for different businesses or currencies. If you have a single merchant account, it is not necessary to specify a merchant account ID in your API requests. If you have multiple merchant accounts and choose not to specify the merchant account ID, all requests will process through your default merchant account.\",\"verbs\":[\"POST\"]}

        :return: The merchant_account_id of this BraintreeCaptureRequest.
        :rtype: str
        """
        return self._merchant_account_id

    @merchant_account_id.setter
    def merchant_account_id(self, merchant_account_id):
        """
        Sets the merchant_account_id of this BraintreeCaptureRequest.
        {\"description\":\"Braintree <a href=\\\"https://articles.braintreepayments.com/control-panel/important-gateway-credentials\\\">Merchant account ID</a> with which you wish for the captured funding instrument to transact. Within your Braintree gateway, you can have multiple merchant accounts to process transactions for different businesses or currencies. If you have a single merchant account, it is not necessary to specify a merchant account ID in your API requests. If you have multiple merchant accounts and choose not to specify the merchant account ID, all requests will process through your default merchant account.\",\"verbs\":[\"POST\"]}

        :param merchant_account_id: The merchant_account_id of this BraintreeCaptureRequest.
        :type: str
        """

        self._merchant_account_id = merchant_account_id

    @property
    def ip_address(self):
        """
        Gets the ip_address of this BraintreeCaptureRequest.
        {\"description\":\"IP address of the customer providing the details of the credit card to be captured.\",\"verbs\":[\"POST\"]}

        :return: The ip_address of this BraintreeCaptureRequest.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """
        Sets the ip_address of this BraintreeCaptureRequest.
        {\"description\":\"IP address of the customer providing the details of the credit card to be captured.\",\"verbs\":[\"POST\"]}

        :param ip_address: The ip_address of this BraintreeCaptureRequest.
        :type: str
        """

        self._ip_address = ip_address

    @property
    def ip_address_country(self):
        """
        Gets the ip_address_country of this BraintreeCaptureRequest.
        {\"description\":\"Country of the IP address of the customer providing the details of the credit card to be captured.\",\"verbs\":[\"POST\"]}

        :return: The ip_address_country of this BraintreeCaptureRequest.
        :rtype: str
        """
        return self._ip_address_country

    @ip_address_country.setter
    def ip_address_country(self, ip_address_country):
        """
        Sets the ip_address_country of this BraintreeCaptureRequest.
        {\"description\":\"Country of the IP address of the customer providing the details of the credit card to be captured.\",\"verbs\":[\"POST\"]}

        :param ip_address_country: The ip_address_country of this BraintreeCaptureRequest.
        :type: str
        """

        self._ip_address_country = ip_address_country

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
