# coding: utf-8

"""
    BillForward REST API


    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from __future__ import absolute_import

import os
import sys
import unittest

import billforward
from billforward.rest import ApiException
from billforward.apis.cybersourcetokens_api import CybersourcetokensApi


class TestCybersourcetokensApi(unittest.TestCase):
    """ CybersourcetokensApi unit test stubs """

    def setUp(self):
        self.api = billforward.apis.cybersourcetokens_api.CybersourcetokensApi()

    def tearDown(self):
        pass

    def test_create_cybersource_token(self):
        """
        Test case for create_cybersource_token

        Create a cybersource-token.
        """
        pass

    def test_get_cybersource_token_by_id(self):
        """
        Test case for get_cybersource_token_by_id

        Returns a single cybersource-token, specified by the token-ID parameter.
        """
        pass

    def test_get_cybersource_token_by_recurring_subscription_id(self):
        """
        Test case for get_cybersource_token_by_recurring_subscription_id

        Returns a single cybersource-token, specified by the recurring-subscription-ID parameter.
        """
        pass

    def test_retire_cybersource_token(self):
        """
        Test case for retire_cybersource_token

        Retires the cybersource token specified by the token-ID parameter.
        """
        pass

    def test_update_cybersource_token(self):
        """
        Test case for update_cybersource_token

        Update a cybersource-token.
        """
        pass


if __name__ == '__main__':
    unittest.main()
