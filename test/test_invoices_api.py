# coding: utf-8

"""
    BillForward REST API


    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from __future__ import absolute_import

import os
import sys
import unittest

import billforward
from billforward.rest import ApiException
from billforward.apis.invoices_api import InvoicesApi


class TestInvoicesApi(unittest.TestCase):
    """ InvoicesApi unit test stubs """

    def setUp(self):
        self.api = billforward.apis.invoices_api.InvoicesApi()

    def tearDown(self):
        pass

    def test_add_charge_to_invoice(self):
        """
        Test case for add_charge_to_invoice

        Creates a charge on the specified invoice.
        """
        pass

    def test_aggregate_invoices(self):
        """
        Test case for aggregate_invoices

        Aggregate Invoices into to one parent Invoice
        """
        pass

    def test_execute_invoice(self):
        """
        Test case for execute_invoice

        Attempt payment for the outstanding value of an invoice
        """
        pass

    def test_generate_line_payments_for_all_invoices(self):
        """
        Test case for generate_line_payments_for_all_invoices

        Generates InvoiceLinePayments for all existing InvoicePayments.
        """
        pass

    def test_get_all_invoices(self):
        """
        Test case for get_all_invoices

        Retrieves a collection of all invoices. By default 10 values are returned. Records are returned in natural order.
        """
        pass

    def test_get_all_invoices_as_csv(self):
        """
        Test case for get_all_invoices_as_csv

        Retrieves a collection of all invoices. By default 10 values are returned. Records are returned in natural order.
        """
        pass

    def test_get_bucketed_revenue_attributions_as_csv(self):
        """
        Test case for get_bucketed_revenue_attributions_as_csv

        Retrieves (as CSV) all attributions of Invoice costs to Invoice lines, bucketed.
        """
        pass

    def test_get_charges_on_invoice(self):
        """
        Test case for get_charges_on_invoice

        Returns all charges for the specified invoice. By default 10 values are returned. Records are returned in natural order.
        """
        pass

    def test_get_credit_invoice_line_payments_from_invoices_as_csv(self):
        """
        Test case for get_credit_invoice_line_payments_from_invoices_as_csv

        Retrieves credit note-paid from InvoicePayments upon line items, in CSV format.
        """
        pass

    def test_get_credit_invoice_line_payments_from_invoices_as_csv_by_payment_received(self):
        """
        Test case for get_credit_invoice_line_payments_from_invoices_as_csv_by_payment_received

        Retrieves credit note-paid from InvoicePayments upon line items, in CSV format.
        """
        pass

    def test_get_debit_invoice_line_payments_from_invoices_as_csv(self):
        """
        Test case for get_debit_invoice_line_payments_from_invoices_as_csv

        Retrieves received revenue from InvoicePayments upon line items, in CSV format.
        """
        pass

    def test_get_debit_invoice_line_payments_from_invoices_as_csv_by_payment_received(self):
        """
        Test case for get_debit_invoice_line_payments_from_invoices_as_csv_by_payment_received

        Retrieves received revenue from InvoicePayments upon line items, in CSV format.
        """
        pass

    def test_get_invoice_as_html(self):
        """
        Test case for get_invoice_as_html

        Retrieves a single invoice specified by the ID parameter.
        """
        pass

    def test_get_invoice_as_pdf(self):
        """
        Test case for get_invoice_as_pdf

        Retrieves a single invoice specified by the ID parameter.
        """
        pass

    def test_get_invoice_by_id(self):
        """
        Test case for get_invoice_by_id

        Retrieves a single invoice specified by the invoice-ID parameter.
        """
        pass

    def test_get_invoice_by_id_as_csv(self):
        """
        Test case for get_invoice_by_id_as_csv

        Retrieves a single invoice specified by the ID parameter.
        """
        pass

    def test_get_invoice_by_subscription_id(self):
        """
        Test case for get_invoice_by_subscription_id

        Retrieves a collection of invoices specified by the subscription-ID parameter. By default 10 values are returned. Records are returned in natural order.
        """
        pass

    def test_get_invoice_by_subscription_version_id(self):
        """
        Test case for get_invoice_by_subscription_version_id

        Retrieves a collection of invoices specified by the subscription-version-ID parameter. By default 10 values are returned. Records are returned in natural order.
        """
        pass

    def test_get_invoice_by_version_id(self):
        """
        Test case for get_invoice_by_version_id

        Retrieves a single invoice, specified by the version-ID parameter.
        """
        pass

    def test_get_invoices_by_account_id(self):
        """
        Test case for get_invoices_by_account_id

        Retrieves a collection of invoices specified by the account-ID parameter. By default 10 values are returned. Records are returned in natural order.
        """
        pass

    def test_get_invoices_by_period_end(self):
        """
        Test case for get_invoices_by_period_end

        Retrieves a collection of invoice objects with period-end times within the period specified by the lower-threshold and upper-threshold parameters. By default 10 values are returned. Records are returned in natural order.
        """
        pass

    def test_get_invoices_by_period_start(self):
        """
        Test case for get_invoices_by_period_start

        Retrieves a collection of invoice objects with period-start times within the period specified by the lower-threshold and upper-threshold parameters. By default 10 values are returned. Records are returned in natural order.
        """
        pass

    def test_get_invoices_by_period_start_as_csv(self):
        """
        Test case for get_invoices_by_period_start_as_csv

        Retrieves a collection of invoice objects with period-start times within the period specified by the lower-threshold and upper-threshold parameters. By default 10 values are returned. Records are returned in natural order.
        """
        pass

    def test_get_invoices_by_state(self):
        """
        Test case for get_invoices_by_state

        Retrieves a collection of invoices, specified by the state parameter. By default 10 values are returned. Records are returned in natural order.
        """
        pass

    def test_get_invoices_by_state_and_period_start(self):
        """
        Test case for get_invoices_by_state_and_period_start

        Retrieves a collection of invoice objects specified by the state parameter and with period-start times within the period specified by the lower-threshold and upper-threshold parameters. By default 10 values are returned. Records are returned in natural order.
        """
        pass

    def test_get_invoices_by_state_and_period_start_as_csv(self):
        """
        Test case for get_invoices_by_state_and_period_start_as_csv

        Retrieves a collection of invoice objects specified by the state parameter and with period-start times within the period specified by the lower-threshold and upper-threshold parameters. By default 10 values are returned. Records are returned in natural order.
        """
        pass

    def test_get_invoices_by_state_as_csv(self):
        """
        Test case for get_invoices_by_state_as_csv

        Retrieves a collection of invoices, specified by the state parameter. By default 10 values are returned. Records are returned in natural order.
        """
        pass

    def test_get_line_payments(self):
        """
        Test case for get_line_payments

        Retrieves all InvoiceLine payment attributions.
        """
        pass

    def test_get_line_payments_as_csv(self):
        """
        Test case for get_line_payments_as_csv

        Retrieves (as CSV) all InvoiceLine payment attributions.
        """
        pass

    def test_get_metadata_for_invoice(self):
        """
        Test case for get_metadata_for_invoice

        Retrieve any associated metadata.
        """
        pass

    def test_get_refund_invoice_line_payments_from_invoices_as_csv(self):
        """
        Test case for get_refund_invoice_line_payments_from_invoices_as_csv

        Retrieves awarded refunds from InvoicePayments upon line items, in CSV format.
        """
        pass

    def test_get_refund_invoice_line_payments_from_invoices_as_csv_by_refund_received(self):
        """
        Test case for get_refund_invoice_line_payments_from_invoices_as_csv_by_refund_received

        Retrieves awarded refunds from InvoicePayments upon line items, in CSV format.
        """
        pass

    def test_get_revenue_attributions(self):
        """
        Test case for get_revenue_attributions

        Retrieves all attributions of Invoice costs to Invoice lines.
        """
        pass

    def test_get_revenue_attributions_as_csv(self):
        """
        Test case for get_revenue_attributions_as_csv

        Retrieves (as CSV) all attributions of Invoice costs to Invoice lines.
        """
        pass

    def test_get_swagger_for_invoice(self):
        """
        Test case for get_swagger_for_invoice

        
        """
        pass

    def test_import_invoice(self):
        """
        Test case for import_invoice

        Import an invoice.
        """
        pass

    def test_recalculate_invoice(self):
        """
        Test case for recalculate_invoice

        Re-calculate an Invoice.
        """
        pass

    def test_remove_charge_from_invoice(self):
        """
        Test case for remove_charge_from_invoice

        Removes the specified charge from the specified Invoice.
        """
        pass

    def test_remove_metadata_from_invoice(self):
        """
        Test case for remove_metadata_from_invoice

        Remove any associated metadata.
        """
        pass

    def test_set_metadata_for_invoice(self):
        """
        Test case for set_metadata_for_invoice

        Remove any existing metadata keys and create the provided data.
        """
        pass

    def test_update_invoice(self):
        """
        Test case for update_invoice

        Update an Invoice.
        """
        pass

    def test_upsert_metadata_for_invoice(self):
        """
        Test case for upsert_metadata_for_invoice

        Update any existing metadata key-values and insert any new key-values, no keys will be removed.
        """
        pass

    def test_void_invoice(self):
        """
        Test case for void_invoice

        Voids the invoice specified by the invoice identifier parameter.
        """
        pass


if __name__ == '__main__':
    unittest.main()
