# coding: utf-8

"""
    BillForward REST API


    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from pprint import pformat
from six import iteritems
import re


class InsertableBillingEntity(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, applied=None, created=None, changed_by=None, id=None, pricing_component_id=None, unit_of_measure_id=None, subscription_id=None, invoice_id=None, organization_id=None, new_value=None, old_value=None, mode=None, state=None, as_of=None):
        """
        InsertableBillingEntity - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'applied': 'datetime',
            'created': 'datetime',
            'changed_by': 'str',
            'id': 'str',
            'pricing_component_id': 'str',
            'unit_of_measure_id': 'str',
            'subscription_id': 'str',
            'invoice_id': 'str',
            'organization_id': 'str',
            'new_value': 'int',
            'old_value': 'int',
            'mode': 'str',
            'state': 'str',
            'as_of': 'datetime'
        }

        self.attribute_map = {
            'applied': 'applied',
            'created': 'created',
            'changed_by': 'changedBy',
            'id': 'id',
            'pricing_component_id': 'pricingComponentID',
            'unit_of_measure_id': 'unitOfMeasureID',
            'subscription_id': 'subscriptionID',
            'invoice_id': 'invoiceID',
            'organization_id': 'organizationID',
            'new_value': 'newValue',
            'old_value': 'oldValue',
            'mode': 'mode',
            'state': 'state',
            'as_of': 'asOf'
        }

        self._applied = applied
        self._created = created
        self._changed_by = changed_by
        self._id = id
        self._pricing_component_id = pricing_component_id
        self._unit_of_measure_id = unit_of_measure_id
        self._subscription_id = subscription_id
        self._invoice_id = invoice_id
        self._organization_id = organization_id
        self._new_value = new_value
        self._old_value = old_value
        self._mode = mode
        self._state = state
        self._as_of = as_of

    @property
    def applied(self):
        """
        Gets the applied of this InsertableBillingEntity.
        { \"description\" : \"The UTC DateTime when the pricing-component-value-change was processed.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :return: The applied of this InsertableBillingEntity.
        :rtype: datetime
        """
        return self._applied

    @applied.setter
    def applied(self, applied):
        """
        Sets the applied of this InsertableBillingEntity.
        { \"description\" : \"The UTC DateTime when the pricing-component-value-change was processed.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :param applied: The applied of this InsertableBillingEntity.
        :type: datetime
        """

        self._applied = applied

    @property
    def created(self):
        """
        Gets the created of this InsertableBillingEntity.
        { \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }

        :return: The created of this InsertableBillingEntity.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """
        Sets the created of this InsertableBillingEntity.
        { \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }

        :param created: The created of this InsertableBillingEntity.
        :type: datetime
        """

        self._created = created

    @property
    def changed_by(self):
        """
        Gets the changed_by of this InsertableBillingEntity.
        { \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }

        :return: The changed_by of this InsertableBillingEntity.
        :rtype: str
        """
        return self._changed_by

    @changed_by.setter
    def changed_by(self, changed_by):
        """
        Sets the changed_by of this InsertableBillingEntity.
        { \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }

        :param changed_by: The changed_by of this InsertableBillingEntity.
        :type: str
        """

        self._changed_by = changed_by

    @property
    def id(self):
        """
        Gets the id of this InsertableBillingEntity.
        { \"description\" : \"ID of the pricing-component-value-change.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :return: The id of this InsertableBillingEntity.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this InsertableBillingEntity.
        { \"description\" : \"ID of the pricing-component-value-change.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :param id: The id of this InsertableBillingEntity.
        :type: str
        """

        self._id = id

    @property
    def pricing_component_id(self):
        """
        Gets the pricing_component_id of this InsertableBillingEntity.
        { \"description\" : \"ID of the pricing-component associated with the pricing-component-value-change.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :return: The pricing_component_id of this InsertableBillingEntity.
        :rtype: str
        """
        return self._pricing_component_id

    @pricing_component_id.setter
    def pricing_component_id(self, pricing_component_id):
        """
        Sets the pricing_component_id of this InsertableBillingEntity.
        { \"description\" : \"ID of the pricing-component associated with the pricing-component-value-change.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :param pricing_component_id: The pricing_component_id of this InsertableBillingEntity.
        :type: str
        """

        self._pricing_component_id = pricing_component_id

    @property
    def unit_of_measure_id(self):
        """
        Gets the unit_of_measure_id of this InsertableBillingEntity.
        { \"description\" : \"ID of the unit-of-measure associated with the pricing-component-value-change.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :return: The unit_of_measure_id of this InsertableBillingEntity.
        :rtype: str
        """
        return self._unit_of_measure_id

    @unit_of_measure_id.setter
    def unit_of_measure_id(self, unit_of_measure_id):
        """
        Sets the unit_of_measure_id of this InsertableBillingEntity.
        { \"description\" : \"ID of the unit-of-measure associated with the pricing-component-value-change.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :param unit_of_measure_id: The unit_of_measure_id of this InsertableBillingEntity.
        :type: str
        """

        self._unit_of_measure_id = unit_of_measure_id

    @property
    def subscription_id(self):
        """
        Gets the subscription_id of this InsertableBillingEntity.
        { \"description\" : \"ID of the subscription associated with the pricing-component-value-change.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :return: The subscription_id of this InsertableBillingEntity.
        :rtype: str
        """
        return self._subscription_id

    @subscription_id.setter
    def subscription_id(self, subscription_id):
        """
        Sets the subscription_id of this InsertableBillingEntity.
        { \"description\" : \"ID of the subscription associated with the pricing-component-value-change.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :param subscription_id: The subscription_id of this InsertableBillingEntity.
        :type: str
        """

        self._subscription_id = subscription_id

    @property
    def invoice_id(self):
        """
        Gets the invoice_id of this InsertableBillingEntity.
        { \"description\" : \"ID of the invoice associated with the pricing-component-value-change.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :return: The invoice_id of this InsertableBillingEntity.
        :rtype: str
        """
        return self._invoice_id

    @invoice_id.setter
    def invoice_id(self, invoice_id):
        """
        Sets the invoice_id of this InsertableBillingEntity.
        { \"description\" : \"ID of the invoice associated with the pricing-component-value-change.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :param invoice_id: The invoice_id of this InsertableBillingEntity.
        :type: str
        """

        self._invoice_id = invoice_id

    @property
    def organization_id(self):
        """
        Gets the organization_id of this InsertableBillingEntity.
        { \"description\" : \"The organizationID.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :return: The organization_id of this InsertableBillingEntity.
        :rtype: str
        """
        return self._organization_id

    @organization_id.setter
    def organization_id(self, organization_id):
        """
        Sets the organization_id of this InsertableBillingEntity.
        { \"description\" : \"The organizationID.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :param organization_id: The organization_id of this InsertableBillingEntity.
        :type: str
        """

        self._organization_id = organization_id

    @property
    def new_value(self):
        """
        Gets the new_value of this InsertableBillingEntity.
        { \"description\" : \"The new value of the pricing-component.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :return: The new_value of this InsertableBillingEntity.
        :rtype: int
        """
        return self._new_value

    @new_value.setter
    def new_value(self, new_value):
        """
        Sets the new_value of this InsertableBillingEntity.
        { \"description\" : \"The new value of the pricing-component.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :param new_value: The new_value of this InsertableBillingEntity.
        :type: int
        """

        self._new_value = new_value

    @property
    def old_value(self):
        """
        Gets the old_value of this InsertableBillingEntity.
        { \"description\" : \"The new value of the pricing-component.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :return: The old_value of this InsertableBillingEntity.
        :rtype: int
        """
        return self._old_value

    @old_value.setter
    def old_value(self, old_value):
        """
        Sets the old_value of this InsertableBillingEntity.
        { \"description\" : \"The new value of the pricing-component.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :param old_value: The old_value of this InsertableBillingEntity.
        :type: int
        """

        self._old_value = old_value

    @property
    def mode(self):
        """
        Gets the mode of this InsertableBillingEntity.
        { \"description\" : \"The value change mode.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :return: The mode of this InsertableBillingEntity.
        :rtype: str
        """
        return self._mode

    @mode.setter
    def mode(self, mode):
        """
        Sets the mode of this InsertableBillingEntity.
        { \"description\" : \"The value change mode.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :param mode: The mode of this InsertableBillingEntity.
        :type: str
        """
        allowed_values = ["immediate", "delayed"]
        if mode not in allowed_values:
            raise ValueError(
                "Invalid value for `mode` ({0}), must be one of {1}"
                .format(mode, allowed_values)
            )

        self._mode = mode

    @property
    def state(self):
        """
        Gets the state of this InsertableBillingEntity.
        { \"description\" : \"The value change state.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :return: The state of this InsertableBillingEntity.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """
        Sets the state of this InsertableBillingEntity.
        { \"description\" : \"The value change state.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :param state: The state of this InsertableBillingEntity.
        :type: str
        """
        allowed_values = ["New", "Accepted", "Rejected", "ChargeCreated"]
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def as_of(self):
        """
        Gets the as_of of this InsertableBillingEntity.
        { \"description\" : \"The UTC DateTime when the pricing-component-value-change was calculated.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :return: The as_of of this InsertableBillingEntity.
        :rtype: datetime
        """
        return self._as_of

    @as_of.setter
    def as_of(self, as_of):
        """
        Sets the as_of of this InsertableBillingEntity.
        { \"description\" : \"The UTC DateTime when the pricing-component-value-change was calculated.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :param as_of: The as_of of this InsertableBillingEntity.
        :type: datetime
        """

        self._as_of = as_of

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
