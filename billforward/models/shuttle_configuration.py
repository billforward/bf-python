# coding: utf-8

"""
    Billforward API

    This is documentation for the Billforward API. You can find out more at billforward.io.  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: team@billforward.net
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six
from billforward.models.api_configuration import APIConfiguration  # noqa: F401,E501

class ShuttleConfiguration(APIConfiguration):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'hosted_payment_config': 'HostedPaymentConfig',
        'instance_key': 'str',
        'percentage_for_other_payment_methods': 'float'
    }
    if hasattr(APIConfiguration, "swagger_types"):
        swagger_types.update(APIConfiguration.swagger_types)

    attribute_map = {
        'hosted_payment_config': 'hostedPaymentConfig',
        'instance_key': 'instanceKey',
        'percentage_for_other_payment_methods': 'percentageForOtherPaymentMethods'
    }
    if hasattr(APIConfiguration, "attribute_map"):
        attribute_map.update(APIConfiguration.attribute_map)

    def __init__(self, hosted_payment_config=None, instance_key=None, percentage_for_other_payment_methods=None, *args, **kwargs):  # noqa: E501
        """ShuttleConfiguration - a model defined in Swagger"""  # noqa: E501
        self._hosted_payment_config = None
        self._instance_key = None
        self._percentage_for_other_payment_methods = None
        self.discriminator = None
        if hosted_payment_config is not None:
            self.hosted_payment_config = hosted_payment_config
        if instance_key is not None:
            self.instance_key = instance_key
        if percentage_for_other_payment_methods is not None:
            self.percentage_for_other_payment_methods = percentage_for_other_payment_methods
        APIConfiguration.__init__(self, *args, **kwargs)

    @property
    def hosted_payment_config(self):
        """Gets the hosted_payment_config of this ShuttleConfiguration.  # noqa: E501


        :return: The hosted_payment_config of this ShuttleConfiguration.  # noqa: E501
        :rtype: HostedPaymentConfig
        """
        return self._hosted_payment_config

    @hosted_payment_config.setter
    def hosted_payment_config(self, hosted_payment_config):
        """Sets the hosted_payment_config of this ShuttleConfiguration.


        :param hosted_payment_config: The hosted_payment_config of this ShuttleConfiguration.  # noqa: E501
        :type: HostedPaymentConfig
        """

        self._hosted_payment_config = hosted_payment_config

    @property
    def instance_key(self):
        """Gets the instance_key of this ShuttleConfiguration.  # noqa: E501


        :return: The instance_key of this ShuttleConfiguration.  # noqa: E501
        :rtype: str
        """
        return self._instance_key

    @instance_key.setter
    def instance_key(self, instance_key):
        """Sets the instance_key of this ShuttleConfiguration.


        :param instance_key: The instance_key of this ShuttleConfiguration.  # noqa: E501
        :type: str
        """

        self._instance_key = instance_key

    @property
    def percentage_for_other_payment_methods(self):
        """Gets the percentage_for_other_payment_methods of this ShuttleConfiguration.  # noqa: E501


        :return: The percentage_for_other_payment_methods of this ShuttleConfiguration.  # noqa: E501
        :rtype: float
        """
        return self._percentage_for_other_payment_methods

    @percentage_for_other_payment_methods.setter
    def percentage_for_other_payment_methods(self, percentage_for_other_payment_methods):
        """Sets the percentage_for_other_payment_methods of this ShuttleConfiguration.


        :param percentage_for_other_payment_methods: The percentage_for_other_payment_methods of this ShuttleConfiguration.  # noqa: E501
        :type: float
        """

        self._percentage_for_other_payment_methods = percentage_for_other_payment_methods

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ShuttleConfiguration, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ShuttleConfiguration):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
