# coding: utf-8

"""
    Billforward API

    This is documentation for the Billforward API. You can find out more at billforward.io.  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: team@billforward.net
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class CreateCouponRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'organization_id': 'str',
        'name': 'str',
        'coupon_code': 'str',
        'product': 'str',
        'product_rate_plan': 'str',
        'currency': 'CreditNoteCurrency',
        'coupons': 'int',
        'uses': 'int',
        'parent_coupon_code_redeemable': 'bool',
        'discounts': 'list[CreateCouponDiscountRequest]'
    }

    attribute_map = {
        'organization_id': 'organizationID',
        'name': 'name',
        'coupon_code': 'couponCode',
        'product': 'product',
        'product_rate_plan': 'productRatePlan',
        'currency': 'currency',
        'coupons': 'coupons',
        'uses': 'uses',
        'parent_coupon_code_redeemable': 'parentCouponCodeRedeemable',
        'discounts': 'discounts'
    }

    def __init__(self, organization_id=None, name=None, coupon_code=None, product=None, product_rate_plan=None, currency=None, coupons=None, uses=None, parent_coupon_code_redeemable=None, discounts=None):  # noqa: E501
        """CreateCouponRequest - a model defined in Swagger"""  # noqa: E501
        self._organization_id = None
        self._name = None
        self._coupon_code = None
        self._product = None
        self._product_rate_plan = None
        self._currency = None
        self._coupons = None
        self._uses = None
        self._parent_coupon_code_redeemable = None
        self._discounts = None
        self.discriminator = None
        if organization_id is not None:
            self.organization_id = organization_id
        if name is not None:
            self.name = name
        if coupon_code is not None:
            self.coupon_code = coupon_code
        if product is not None:
            self.product = product
        if product_rate_plan is not None:
            self.product_rate_plan = product_rate_plan
        if currency is not None:
            self.currency = currency
        if coupons is not None:
            self.coupons = coupons
        if uses is not None:
            self.uses = uses
        if parent_coupon_code_redeemable is not None:
            self.parent_coupon_code_redeemable = parent_coupon_code_redeemable
        if discounts is not None:
            self.discounts = discounts

    @property
    def organization_id(self):
        """Gets the organization_id of this CreateCouponRequest.  # noqa: E501


        :return: The organization_id of this CreateCouponRequest.  # noqa: E501
        :rtype: str
        """
        return self._organization_id

    @organization_id.setter
    def organization_id(self, organization_id):
        """Sets the organization_id of this CreateCouponRequest.


        :param organization_id: The organization_id of this CreateCouponRequest.  # noqa: E501
        :type: str
        """

        self._organization_id = organization_id

    @property
    def name(self):
        """Gets the name of this CreateCouponRequest.  # noqa: E501


        :return: The name of this CreateCouponRequest.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateCouponRequest.


        :param name: The name of this CreateCouponRequest.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def coupon_code(self):
        """Gets the coupon_code of this CreateCouponRequest.  # noqa: E501


        :return: The coupon_code of this CreateCouponRequest.  # noqa: E501
        :rtype: str
        """
        return self._coupon_code

    @coupon_code.setter
    def coupon_code(self, coupon_code):
        """Sets the coupon_code of this CreateCouponRequest.


        :param coupon_code: The coupon_code of this CreateCouponRequest.  # noqa: E501
        :type: str
        """

        self._coupon_code = coupon_code

    @property
    def product(self):
        """Gets the product of this CreateCouponRequest.  # noqa: E501


        :return: The product of this CreateCouponRequest.  # noqa: E501
        :rtype: str
        """
        return self._product

    @product.setter
    def product(self, product):
        """Sets the product of this CreateCouponRequest.


        :param product: The product of this CreateCouponRequest.  # noqa: E501
        :type: str
        """

        self._product = product

    @property
    def product_rate_plan(self):
        """Gets the product_rate_plan of this CreateCouponRequest.  # noqa: E501


        :return: The product_rate_plan of this CreateCouponRequest.  # noqa: E501
        :rtype: str
        """
        return self._product_rate_plan

    @product_rate_plan.setter
    def product_rate_plan(self, product_rate_plan):
        """Sets the product_rate_plan of this CreateCouponRequest.


        :param product_rate_plan: The product_rate_plan of this CreateCouponRequest.  # noqa: E501
        :type: str
        """

        self._product_rate_plan = product_rate_plan

    @property
    def currency(self):
        """Gets the currency of this CreateCouponRequest.  # noqa: E501


        :return: The currency of this CreateCouponRequest.  # noqa: E501
        :rtype: CreditNoteCurrency
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this CreateCouponRequest.


        :param currency: The currency of this CreateCouponRequest.  # noqa: E501
        :type: CreditNoteCurrency
        """

        self._currency = currency

    @property
    def coupons(self):
        """Gets the coupons of this CreateCouponRequest.  # noqa: E501


        :return: The coupons of this CreateCouponRequest.  # noqa: E501
        :rtype: int
        """
        return self._coupons

    @coupons.setter
    def coupons(self, coupons):
        """Sets the coupons of this CreateCouponRequest.


        :param coupons: The coupons of this CreateCouponRequest.  # noqa: E501
        :type: int
        """

        self._coupons = coupons

    @property
    def uses(self):
        """Gets the uses of this CreateCouponRequest.  # noqa: E501


        :return: The uses of this CreateCouponRequest.  # noqa: E501
        :rtype: int
        """
        return self._uses

    @uses.setter
    def uses(self, uses):
        """Sets the uses of this CreateCouponRequest.


        :param uses: The uses of this CreateCouponRequest.  # noqa: E501
        :type: int
        """

        self._uses = uses

    @property
    def parent_coupon_code_redeemable(self):
        """Gets the parent_coupon_code_redeemable of this CreateCouponRequest.  # noqa: E501


        :return: The parent_coupon_code_redeemable of this CreateCouponRequest.  # noqa: E501
        :rtype: bool
        """
        return self._parent_coupon_code_redeemable

    @parent_coupon_code_redeemable.setter
    def parent_coupon_code_redeemable(self, parent_coupon_code_redeemable):
        """Sets the parent_coupon_code_redeemable of this CreateCouponRequest.


        :param parent_coupon_code_redeemable: The parent_coupon_code_redeemable of this CreateCouponRequest.  # noqa: E501
        :type: bool
        """

        self._parent_coupon_code_redeemable = parent_coupon_code_redeemable

    @property
    def discounts(self):
        """Gets the discounts of this CreateCouponRequest.  # noqa: E501


        :return: The discounts of this CreateCouponRequest.  # noqa: E501
        :rtype: list[CreateCouponDiscountRequest]
        """
        return self._discounts

    @discounts.setter
    def discounts(self, discounts):
        """Sets the discounts of this CreateCouponRequest.


        :param discounts: The discounts of this CreateCouponRequest.  # noqa: E501
        :type: list[CreateCouponDiscountRequest]
        """

        self._discounts = discounts

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CreateCouponRequest, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CreateCouponRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
