# coding: utf-8

"""
    BillForward REST API


    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from pprint import pformat
from six import iteritems
import re


class InvoicePayment(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, payment_received=None, refund_received=None, created=None, changed_by=None, updated=None, id=None, crm_id=None, payment_id=None, invoice_id=None, organization_id=None, currency=None, gateway=None, nominal_amount=None, actual_amount=None, refunded_amount=None):
        """
        InvoicePayment - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'payment_received': 'datetime',
            'refund_received': 'datetime',
            'created': 'datetime',
            'changed_by': 'str',
            'updated': 'datetime',
            'id': 'str',
            'crm_id': 'str',
            'payment_id': 'str',
            'invoice_id': 'str',
            'organization_id': 'str',
            'currency': 'str',
            'gateway': 'str',
            'nominal_amount': 'float',
            'actual_amount': 'float',
            'refunded_amount': 'float'
        }

        self.attribute_map = {
            'payment_received': 'paymentReceived',
            'refund_received': 'refundReceived',
            'created': 'created',
            'changed_by': 'changedBy',
            'updated': 'updated',
            'id': 'id',
            'crm_id': 'crmID',
            'payment_id': 'paymentID',
            'invoice_id': 'invoiceID',
            'organization_id': 'organizationID',
            'currency': 'currency',
            'gateway': 'gateway',
            'nominal_amount': 'nominalAmount',
            'actual_amount': 'actualAmount',
            'refunded_amount': 'refundedAmount'
        }

        self._payment_received = payment_received
        self._refund_received = refund_received
        self._created = created
        self._changed_by = changed_by
        self._updated = updated
        self._id = id
        self._crm_id = crm_id
        self._payment_id = payment_id
        self._invoice_id = invoice_id
        self._organization_id = organization_id
        self._currency = currency
        self._gateway = gateway
        self._nominal_amount = nominal_amount
        self._actual_amount = actual_amount
        self._refunded_amount = refunded_amount

    @property
    def payment_received(self):
        """
        Gets the payment_received of this InvoicePayment.
        {\"description\":\"The date when the associated payment was received.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}

        :return: The payment_received of this InvoicePayment.
        :rtype: datetime
        """
        return self._payment_received

    @payment_received.setter
    def payment_received(self, payment_received):
        """
        Sets the payment_received of this InvoicePayment.
        {\"description\":\"The date when the associated payment was received.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}

        :param payment_received: The payment_received of this InvoicePayment.
        :type: datetime
        """

        self._payment_received = payment_received

    @property
    def refund_received(self):
        """
        Gets the refund_received of this InvoicePayment.
        {\"description\":\"The date when the associated payment was refunded.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}

        :return: The refund_received of this InvoicePayment.
        :rtype: datetime
        """
        return self._refund_received

    @refund_received.setter
    def refund_received(self, refund_received):
        """
        Sets the refund_received of this InvoicePayment.
        {\"description\":\"The date when the associated payment was refunded.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}

        :param refund_received: The refund_received of this InvoicePayment.
        :type: datetime
        """

        self._refund_received = refund_received

    @property
    def created(self):
        """
        Gets the created of this InvoicePayment.
        { \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }

        :return: The created of this InvoicePayment.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """
        Sets the created of this InvoicePayment.
        { \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }

        :param created: The created of this InvoicePayment.
        :type: datetime
        """

        self._created = created

    @property
    def changed_by(self):
        """
        Gets the changed_by of this InvoicePayment.
        { \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }

        :return: The changed_by of this InvoicePayment.
        :rtype: str
        """
        return self._changed_by

    @changed_by.setter
    def changed_by(self, changed_by):
        """
        Sets the changed_by of this InvoicePayment.
        { \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }

        :param changed_by: The changed_by of this InvoicePayment.
        :type: str
        """

        self._changed_by = changed_by

    @property
    def updated(self):
        """
        Gets the updated of this InvoicePayment.
        { \"description\" : \"The UTC DateTime when the object was last updated.\", \"verbs\":[] }

        :return: The updated of this InvoicePayment.
        :rtype: datetime
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """
        Sets the updated of this InvoicePayment.
        { \"description\" : \"The UTC DateTime when the object was last updated.\", \"verbs\":[] }

        :param updated: The updated of this InvoicePayment.
        :type: datetime
        """

        self._updated = updated

    @property
    def id(self):
        """
        Gets the id of this InvoicePayment.
        { \"description\" : \"ID of the payment-line.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :return: The id of this InvoicePayment.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this InvoicePayment.
        { \"description\" : \"ID of the payment-line.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :param id: The id of this InvoicePayment.
        :type: str
        """

        self._id = id

    @property
    def crm_id(self):
        """
        Gets the crm_id of this InvoicePayment.
        { \"description\" : \"CRM ID of the invoice.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :return: The crm_id of this InvoicePayment.
        :rtype: str
        """
        return self._crm_id

    @crm_id.setter
    def crm_id(self, crm_id):
        """
        Sets the crm_id of this InvoicePayment.
        { \"description\" : \"CRM ID of the invoice.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :param crm_id: The crm_id of this InvoicePayment.
        :type: str
        """

        self._crm_id = crm_id

    @property
    def payment_id(self):
        """
        Gets the payment_id of this InvoicePayment.
        { \"description\" : \"ID of the payment used.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :return: The payment_id of this InvoicePayment.
        :rtype: str
        """
        return self._payment_id

    @payment_id.setter
    def payment_id(self, payment_id):
        """
        Sets the payment_id of this InvoicePayment.
        { \"description\" : \"ID of the payment used.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :param payment_id: The payment_id of this InvoicePayment.
        :type: str
        """

        self._payment_id = payment_id

    @property
    def invoice_id(self):
        """
        Gets the invoice_id of this InvoicePayment.
        { \"description\" : \"ID of the invoice associated with the payment-line.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :return: The invoice_id of this InvoicePayment.
        :rtype: str
        """
        return self._invoice_id

    @invoice_id.setter
    def invoice_id(self, invoice_id):
        """
        Sets the invoice_id of this InvoicePayment.
        { \"description\" : \"ID of the invoice associated with the payment-line.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :param invoice_id: The invoice_id of this InvoicePayment.
        :type: str
        """

        self._invoice_id = invoice_id

    @property
    def organization_id(self):
        """
        Gets the organization_id of this InvoicePayment.
        { \"description\" : \"ID of the organization associated with the invoice-payment.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :return: The organization_id of this InvoicePayment.
        :rtype: str
        """
        return self._organization_id

    @organization_id.setter
    def organization_id(self, organization_id):
        """
        Sets the organization_id of this InvoicePayment.
        { \"description\" : \"ID of the organization associated with the invoice-payment.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :param organization_id: The organization_id of this InvoicePayment.
        :type: str
        """

        self._organization_id = organization_id

    @property
    def currency(self):
        """
        Gets the currency of this InvoicePayment.
        { \"description\" : \"The currency of the payment specified by a three character ISO 4217 currency code.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :return: The currency of this InvoicePayment.
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """
        Sets the currency of this InvoicePayment.
        { \"description\" : \"The currency of the payment specified by a three character ISO 4217 currency code.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :param currency: The currency of this InvoicePayment.
        :type: str
        """

        self._currency = currency

    @property
    def gateway(self):
        """
        Gets the gateway of this InvoicePayment.
        Payment gateway associated with the payment

        :return: The gateway of this InvoicePayment.
        :rtype: str
        """
        return self._gateway

    @gateway.setter
    def gateway(self, gateway):
        """
        Sets the gateway of this InvoicePayment.
        Payment gateway associated with the payment

        :param gateway: The gateway of this InvoicePayment.
        :type: str
        """
        allowed_values = ["cybersource_token", "card_vault", "paypal_simple", "locustworld", "free", "coupon", "credit_note", "stripe", "braintree", "balanced", "paypal", "billforward_test", "offline", "trial", "stripeACH", "authorizeNet", "spreedly", "sagePay", "trustCommerce", "payvision", "kash"]
        if gateway not in allowed_values:
            raise ValueError(
                "Invalid value for `gateway` ({0}), must be one of {1}"
                .format(gateway, allowed_values)
            )

        self._gateway = gateway

    @property
    def nominal_amount(self):
        """
        Gets the nominal_amount of this InvoicePayment.
        { \"description\" : \"The value that this payment-line represents.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :return: The nominal_amount of this InvoicePayment.
        :rtype: float
        """
        return self._nominal_amount

    @nominal_amount.setter
    def nominal_amount(self, nominal_amount):
        """
        Sets the nominal_amount of this InvoicePayment.
        { \"description\" : \"The value that this payment-line represents.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :param nominal_amount: The nominal_amount of this InvoicePayment.
        :type: float
        """

        self._nominal_amount = nominal_amount

    @property
    def actual_amount(self):
        """
        Gets the actual_amount of this InvoicePayment.
        { \"description\" : \"The value of the payment used by payment-line.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :return: The actual_amount of this InvoicePayment.
        :rtype: float
        """
        return self._actual_amount

    @actual_amount.setter
    def actual_amount(self, actual_amount):
        """
        Sets the actual_amount of this InvoicePayment.
        { \"description\" : \"The value of the payment used by payment-line.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :param actual_amount: The actual_amount of this InvoicePayment.
        :type: float
        """

        self._actual_amount = actual_amount

    @property
    def refunded_amount(self):
        """
        Gets the refunded_amount of this InvoicePayment.
        { \"description\" : \"The refunded amount of the invoice-payment.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :return: The refunded_amount of this InvoicePayment.
        :rtype: float
        """
        return self._refunded_amount

    @refunded_amount.setter
    def refunded_amount(self, refunded_amount):
        """
        Sets the refunded_amount of this InvoicePayment.
        { \"description\" : \"The refunded amount of the invoice-payment.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }

        :param refunded_amount: The refunded_amount of this InvoicePayment.
        :type: float
        """

        self._refunded_amount = refunded_amount

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
